/* * * * * * * * * * * * * * * * * * * * * * * * *  EBCOREFUNCS.JS  * * * * * * * * * * * * * * * * * * * * * * * * */

var _ = function( Element ) {

  this._ = function() {
    return document.getElementById( Element );
  }
  
  this.$ = this._();

  this.load = function( Code ) {
    window.addEventListener( 'load', function() {
      try {
        Code();
      } catch( Exception ) {
        console.log( Exception );
      }
    });
  }

  this.click = function( CODE ) {
    document.getElementById( Element ).onclick = function() {
      CODE();
    }
  }

  this.animate = {

    // VARIABLES DEFINITION
    it : this.$,
    timers : new Array( 100 ),

    // FUNCTIONS DEFINITION
    
    move : function( Direction, From, To ) {

      switch( Direction ) {
        case 'top':
          this.it.style.top = ( From - To ) + "px !important";
          break;
        case 'left':
          this.it.style.left = ( From + To ) + "px !important";
          break;
        case 'right':
          this.it.style.left = ( From - To ) + "px !important";
          break;
        case 'bottom':
          this.it.style.top = ( From + To ) + "px !important";
          break;
        default:
          console.log( 'Invalid argument [ function move() ]: ' + Direction );
      }

    } // END FUNCTION MOVE

  }

}

function $( Element ) {
  return new _( Element );
}
